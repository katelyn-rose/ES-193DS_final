---
title: "Final"
author: "Katie Miller"
format:
  html:
    toc: true
    toc-location: left
    code-fold: true
execute:
  message: false
  warning: false
---

# Problem 1

## Introduction

How does total seed number differ between kangaroo rat mound locations?

### Introduction Code

```{r}
# loading in packages
library(here)
library(MASS)
library(tidyverse)
library(naniar)
library(GGally)
library(lmtest)
library(glmmTMB)
library(DHARMa)
library(rstatix)
library(flextable)
library(lme4)
library(MuMIn)
library(ggeffects)
```

```{r}
# reading in data
rat <- read_csv(here("data","sev208_kratseedbank_20120213.txt"))
```

## Methods

### Methods Figures & Code
```{r}
gg_miss_var(rat) +
  theme_bw() 
```
**Figure 1. Visualizing missing data.** There are no missing values in our kangaroo rat dataset.

```{r}
ggplot(data = rat, aes(x = loc, y = seeds)) +
  geom_point() +
  theme_bw() +
  labs(x = "Mound location", y = "Total number of seeds")
```
**Figure 2. Exploratory data visualization.** There seems to be a correlation between mound location and number of seeds, further analysis should be conducted.

```{r}
# Kruskal-Wallis rank sum test
kruskal.test(seeds ~ loc, data = rat) 
```
**Table 1. Kruskal-Wallis rank sum test.** At least two seed counts differ between the mound locations.

```{r}
# quantify the effect 
rat %>% 
  kruskal_effsize(seeds ~ loc)
```
**Table 2. Effect size for Kruskal Wallis.** The magnitude of the effect is small.

```{r}
# Wilcoxon signed rank test
pairwise.wilcox.test(rat$seeds, rat$loc, p.adjust.method = "BH")
```
**Table x. Wilcoxon signed rank test**

```{r}
# creating summary table
rat_summary <- rat %>% 
  group_by(loc) %>% 
  summarize(mean_seed = mean(seeds),
            sd_seed = sd(seeds),
            var_seed = var(seeds),
            count_seed = length(seeds),
            se_seed = sd_seed/sqrt(count_seed),
            margin_seed = qt(0.95, df = count_seed - 1) * se_seed)

# plotting relationship
ggplot(data = rat_summary, aes (y = mean_seed, x = loc, color = loc)) +
  geom_point() +
  geom_linerange(aes(ymin = mean_seed - margin_seed, ymax = mean_seed + margin_seed), linewidth = 0.5) +
  theme_bw()
```
**Figure 3. Mean number of seeds in each mound location.** The darker points represent the means with standard error bars and the lighter points represent the entire data set, The red represents ...

## Results

### Results Figures & Code

## Bibliography






# Problem 2

## Introduction
How does seed count vary with plot type (shrub or open), plant species, and total number of inflorescences? 
Is there a simpler model that explains seed count, and if so, what is it?

### Introduction Code

```{r}
# reading in data
seed <- read_csv(here("data", "knb-lter-nwt.297.1", "shrubstudy_seed_ctwt.ms.data.csv"))
```

## Methods

### Methods Figures & Code

```{r}
# visualizing missing data
gg_miss_var(seed)
```
**Figure 1. Visualizing missing data.** Our response variable, total number of seeds, has around 100 missing values.

```{r}
# creating a subset with variables of interest
seed_subset <- seed %>% 
  select(aspect, treatment, species, total_nr_infl, nr_seeds, 
         dist_fr_shr, wt_seeds_mg)
```

```{r}
# model selection: creating null model and testing different fits

null_seedmod <- glm.nb(nr_seeds ~ 1, data = seed_subset)

seedmod1 <- glm(nr_seeds ~ species + treatment + total_nr_infl, data = seed_subset, family = "poisson")

seedmod2 <- glm.nb(nr_seeds ~ species + treatment + total_nr_infl, data = seed_subset)

seedmod3 <- glmer(nr_seeds ~ species + treatment + total_nr_infl + (1|aspect), data = seed_subset, family = "poisson")

seedmod4 <- glmer.nb(nr_seeds ~ species + treatment + total_nr_infl + (1|aspect), data = seed_subset)

MuMIn::model.sel(null_seedmod, seedmod1, seedmod2, seedmod3, seedmod4)
```
**Table 1. Model selection.** Of our models, the Negative Binomial Generalized Linear Model fit the best. 

```{r}
# plotting simulated residuals for the the best fitting model
plot(simulateResiduals(seedmod2))
```
**Figure 2.**

```{r}
#
seedmod2 %>% 
  as_flextable()
```
**Table 2.**

```{r}
# simpler model?
seed_subset %>% 
  ggpairs(cardinality_threshold = 19)
```
**Figure x. Pairs plot.** Allows us to see if there is a correlation between variables. 

```{r}
# simpler model to explain seed count?
seedmod5 <- glm.nb(nr_seeds ~ wt_seeds_mg, data = seed_subset)

seedmod6 <- glm.nb(nr_seeds ~ wt_seeds_mg + total_nr_infl, data = seed_subset)

seedmod7 <- glm.nb(nr_seeds ~ wt_seeds_mg + total_nr_infl + aspect, data = seed_subset)

MuMIn::model.sel(seedmod2, seedmod5, seedmod6, seedmod7)
```
**Table x. Simpler model selection.** Model 6 containing seed weight and total number of inflorescences is the simplest.

```{r}
plot(simulateResiduals(seedmod6))
```
**Table x. Check of assumptions for Model 6.**

```{r}
#
seedmod6 %>% 
  as_flextable()
```
**Table x.**

## Results

```{r}
# visualizing predictions for model 2

# removing NAs
seed.na <- seed %>% 
  select(treatment, species, total_nr_infl, nr_seeds)

seed.filtered <- na.omit(seed.na)

# creating model predictions 
predictions <- ggpredict(seedmod2, terms = c("total_nr_infl", "species", "treatment")) %>% 
  rename(treatment = facet,
         species = group)

# graphing predictions
ggplot(seed.filtered, aes(x = total_nr_infl, y = nr_seeds, color = treatment, na.rm = TRUE)) +
  geom_point(alpha = 0.4) +
  geom_line(data = predictions, aes(x = x, y = predicted, color = treatment)) +
  facet_wrap(~ species)
```
**Figure x. Visualizing model predictions.**

```{r}
# visualizing predictions for model 6
```


### Results Figures & Code

## Bibliography
